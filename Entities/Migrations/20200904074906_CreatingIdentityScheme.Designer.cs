// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200904074906_CreatingIdentityScheme")]
    partial class CreatingIdentityScheme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.CatProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Coding")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long?>("Pid")
                        .HasColumnName("PID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnName("URL")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Pid");

                    b.ToTable("CatProduct");
                });

            modelBuilder.Entity("Entities.Models.CatProductParameters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatProductId")
                        .HasColumnName("CatProductID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParametersId")
                        .HasColumnName("ParametersID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CatProductId");

                    b.HasIndex("ParametersId");

                    b.ToTable("CatProductParameters");
                });

            modelBuilder.Entity("Entities.Models.CatStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CatStatus");
                });

            modelBuilder.Entity("Entities.Models.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Entities.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<long?>("Bdate")
                        .HasColumnName("BDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("FinalStatusId")
                        .HasColumnName("FinalStatusID")
                        .HasColumnType("bigint");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("LocationId")
                        .HasColumnName("LocationID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MelliCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("PostalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileImageHurl")
                        .HasColumnName("ProfileImageHURL")
                        .HasColumnType("nvarchar(514)")
                        .HasMaxLength(514);

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnName("ProfileImageURL")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<long?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FinalStatusId");

                    b.HasIndex("LocationId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Entities.Models.CustomerActivation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Email")
                        .HasColumnType("bigint");

                    b.Property<int?>("FaileCount")
                        .HasColumnType("int");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("SendDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivation");
                });

            modelBuilder.Entity("Entities.Models.CustomerOffer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("OfferCode")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("OfferId")
                        .HasColumnName("OfferID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToDate")
                        .HasColumnType("bigint");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfferId");

                    b.ToTable("CustomerOffer");
                });

            modelBuilder.Entity("Entities.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnName("CountryID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("LocationCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("Pid")
                        .HasColumnName("PID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinceId")
                        .HasColumnName("ProvinceID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Pid");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Entities.Models.OfferType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OfferType");
                });

            modelBuilder.Entity("Entities.Models.Offers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("OfferCode")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("OfferType")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToDate")
                        .HasColumnType("bigint");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OfferType");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Entities.Models.Parameters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<long?>("Pid")
                        .HasColumnName("PID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Pid");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatProductId")
                        .HasColumnName("CatProductID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Coding")
                        .HasColumnType("bigint");

                    b.Property<long?>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("CoverImageHurl")
                        .HasColumnName("CoverImageHURL")
                        .HasColumnType("nvarchar(514)")
                        .HasMaxLength(514);

                    b.Property<string>("CoverImageUrl")
                        .HasColumnName("CoverImageURL")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long?>("FinalStatusId")
                        .HasColumnName("FinalStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FirstCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductMeterId")
                        .HasColumnName("ProductMeterID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.Property<long?>("SellerId")
                        .HasColumnName("SellerID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CatProductId");

                    b.HasIndex("FinalStatusId");

                    b.HasIndex("ProductMeterId");

                    b.HasIndex("SellerId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Entities.Models.ProductCustomerComments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommentDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommentDesc")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<int?>("DislikeCount")
                        .HasColumnType("int");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCustomerComments");
                });

            modelBuilder.Entity("Entities.Models.ProductCustomerRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("bigint");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCustomerRate");
                });

            modelBuilder.Entity("Entities.Models.ProductImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("ColorId")
                        .HasColumnName("ColorID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageHurl")
                        .HasColumnName("ImageHURL")
                        .HasColumnType("nvarchar(514)")
                        .HasMaxLength(514);

                    b.Property<string>("ImageUrl")
                        .HasColumnName("ImageURL")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("Entities.Models.ProductMeter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ProductMeter");
                });

            modelBuilder.Entity("Entities.Models.ProductOffer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("OfferCode")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("OfferId")
                        .HasColumnName("OfferID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToDate")
                        .HasColumnType("bigint");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOffer");
                });

            modelBuilder.Entity("Entities.Models.ProductParameters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatProductParameters")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("CatProductParameters");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductParameters");
                });

            modelBuilder.Entity("Entities.Models.Seller", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<long?>("Bdate")
                        .HasColumnName("BDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("FinalStatusId")
                        .HasColumnName("FinalStatusID")
                        .HasColumnType("bigint");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("LocationId")
                        .HasColumnName("LocationID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MelliCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("PostalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileImageHurl")
                        .HasColumnName("ProfileImageHURL")
                        .HasColumnType("nvarchar(514)")
                        .HasMaxLength(514);

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnName("ProfileImageURL")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<long?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FinalStatusId");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("Entities.Models.SellerCatProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatProductId")
                        .HasColumnName("CatProductID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("SellerId")
                        .HasColumnName("SellerID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CatProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("SellerCatProduct");
                });

            modelBuilder.Entity("Entities.Models.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatStatusId")
                        .HasColumnName("CatStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("NextStatusId")
                        .HasColumnName("NextStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.Property<long?>("StatusTypeId")
                        .HasColumnName("StatusTypeID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CatStatusId");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Entities.Models.StatusType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("StatusType");
                });

            modelBuilder.Entity("Entities.Models.Systems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<long?>("Rkey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("Entities.Models.Tables", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatStatusId")
                        .HasColumnName("CatStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Cdate")
                        .HasColumnName("CDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("CuserId")
                        .HasColumnName("CUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaUserId")
                        .HasColumnName("DaUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Ddate")
                        .HasColumnName("DDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("DuserId")
                        .HasColumnName("DUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mdate")
                        .HasColumnName("MDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuserId")
                        .HasColumnName("MUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<long?>("SystemId")
                        .HasColumnName("SystemID")
                        .HasColumnType("bigint");

                    b.Property<long?>("TableCode")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CatStatusId");

                    b.HasIndex("SystemId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<long>("BirthDate")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("NationalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<long>("PostalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Models.CatProduct", b =>
                {
                    b.HasOne("Entities.Models.CatProduct", "P")
                        .WithMany("InverseP")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK_CatProduct_CatProduct");
                });

            modelBuilder.Entity("Entities.Models.CatProductParameters", b =>
                {
                    b.HasOne("Entities.Models.CatProduct", "CatProduct")
                        .WithMany("CatProductParameters")
                        .HasForeignKey("CatProductId")
                        .HasConstraintName("FK_CatProductParameters_CatProduct");

                    b.HasOne("Entities.Models.Parameters", "Parameters")
                        .WithMany("CatProductParameters")
                        .HasForeignKey("ParametersId")
                        .HasConstraintName("FK_CatProductParameters_Parameters");
                });

            modelBuilder.Entity("Entities.Models.Customer", b =>
                {
                    b.HasOne("Entities.Models.Status", "FinalStatus")
                        .WithMany("Customer")
                        .HasForeignKey("FinalStatusId")
                        .HasConstraintName("FK_Customer_Status");

                    b.HasOne("Entities.Models.Location", "Location")
                        .WithMany("Customer")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Customer_Location");
                });

            modelBuilder.Entity("Entities.Models.CustomerActivation", b =>
                {
                    b.HasOne("Entities.Models.Customer", "Customer")
                        .WithMany("CustomerActivation")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CustomerActivation_Customer");
                });

            modelBuilder.Entity("Entities.Models.CustomerOffer", b =>
                {
                    b.HasOne("Entities.Models.Customer", "Customer")
                        .WithMany("CustomerOffer")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CustomerOffer_Customer");

                    b.HasOne("Entities.Models.Offers", "Offer")
                        .WithMany("CustomerOffer")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_UserOffer_Offers");
                });

            modelBuilder.Entity("Entities.Models.Location", b =>
                {
                    b.HasOne("Entities.Models.Location", "Country")
                        .WithMany("InverseCountry")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Location_Location1");

                    b.HasOne("Entities.Models.Location", "P")
                        .WithMany("InverseP")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK_Location_Location");

                    b.HasOne("Entities.Models.Location", "Province")
                        .WithMany("InverseProvince")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Location_Location2");
                });

            modelBuilder.Entity("Entities.Models.Offers", b =>
                {
                    b.HasOne("Entities.Models.OfferType", "OfferTypeNavigation")
                        .WithMany("Offers")
                        .HasForeignKey("OfferType")
                        .HasConstraintName("FK_Offers_OfferType");
                });

            modelBuilder.Entity("Entities.Models.Parameters", b =>
                {
                    b.HasOne("Entities.Models.Parameters", "P")
                        .WithMany("InverseP")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK_Parameters_Parameters");
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.HasOne("Entities.Models.CatProduct", "CatProduct")
                        .WithMany("Product")
                        .HasForeignKey("CatProductId")
                        .HasConstraintName("FK_Product_CatProduct");

                    b.HasOne("Entities.Models.Status", "FinalStatus")
                        .WithMany("Product")
                        .HasForeignKey("FinalStatusId")
                        .HasConstraintName("FK_Product_Status");

                    b.HasOne("Entities.Models.ProductMeter", "ProductMeter")
                        .WithMany("Product")
                        .HasForeignKey("ProductMeterId")
                        .HasConstraintName("FK_Product_ProductMeter");

                    b.HasOne("Entities.Models.Seller", "Seller")
                        .WithMany("Product")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK_Product_Seller");
                });

            modelBuilder.Entity("Entities.Models.ProductCustomerComments", b =>
                {
                    b.HasOne("Entities.Models.Customer", "Customer")
                        .WithMany("ProductCustomerComments")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ProductCustomerComments_Customer");

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany("ProductCustomerComments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductUserComments_Product");
                });

            modelBuilder.Entity("Entities.Models.ProductCustomerRate", b =>
                {
                    b.HasOne("Entities.Models.Customer", "Customer")
                        .WithMany("ProductCustomerRate")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ProductCustomerRate_Customer");

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany("ProductCustomerRate")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductUserRate_Product");
                });

            modelBuilder.Entity("Entities.Models.ProductImage", b =>
                {
                    b.HasOne("Entities.Models.Color", "Color")
                        .WithMany("ProductImage")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_ProductImage_Color");

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany("ProductImage")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductImage_Product");
                });

            modelBuilder.Entity("Entities.Models.ProductOffer", b =>
                {
                    b.HasOne("Entities.Models.Offers", "Offer")
                        .WithMany("ProductOffer")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_ProductOffer_Offers");

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany("ProductOffer")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductOffer_Product");
                });

            modelBuilder.Entity("Entities.Models.ProductParameters", b =>
                {
                    b.HasOne("Entities.Models.CatProductParameters", "CatProductParametersNavigation")
                        .WithMany("ProductParameters")
                        .HasForeignKey("CatProductParameters")
                        .HasConstraintName("FK_ProductParameters_CatProductParameters");

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany("ProductParameters")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductParameters_Product");
                });

            modelBuilder.Entity("Entities.Models.Seller", b =>
                {
                    b.HasOne("Entities.Models.Status", "FinalStatus")
                        .WithMany("Seller")
                        .HasForeignKey("FinalStatusId")
                        .HasConstraintName("FK_Seller_Status");
                });

            modelBuilder.Entity("Entities.Models.SellerCatProduct", b =>
                {
                    b.HasOne("Entities.Models.CatProduct", "CatProduct")
                        .WithMany("SellerCatProduct")
                        .HasForeignKey("CatProductId")
                        .HasConstraintName("FK_SellerCatProduct_CatProduct");

                    b.HasOne("Entities.Models.Seller", "Seller")
                        .WithMany("SellerCatProduct")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK_SellerCatProduct_Seller");
                });

            modelBuilder.Entity("Entities.Models.Status", b =>
                {
                    b.HasOne("Entities.Models.CatStatus", "CatStatus")
                        .WithMany("Status")
                        .HasForeignKey("CatStatusId")
                        .HasConstraintName("FK_Status_CatStatus");

                    b.HasOne("Entities.Models.StatusType", "StatusType")
                        .WithMany("Status")
                        .HasForeignKey("StatusTypeId")
                        .HasConstraintName("FK_Status_StatusType");
                });

            modelBuilder.Entity("Entities.Models.Tables", b =>
                {
                    b.HasOne("Entities.Models.CatStatus", "CatStatus")
                        .WithMany("Tables")
                        .HasForeignKey("CatStatusId")
                        .HasConstraintName("FK_Tables_CatStatus");

                    b.HasOne("Entities.Models.Systems", "System")
                        .WithMany("Tables")
                        .HasForeignKey("SystemId")
                        .HasConstraintName("FK_Tables_Systems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
